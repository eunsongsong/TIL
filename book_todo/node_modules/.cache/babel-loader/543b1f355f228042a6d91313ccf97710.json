{"ast":null,"code":"import axios from \"axios\"; //import request from './cors';\n//\n\nclass BookApi {\n  constructor() {\n    this.URL = \"/api/books/\";\n  }\n\n  //http://localhost:9000/api/books\n  bookList() {\n    return axios.get(this.URL).then(response => response && response.data || null);\n  } // bookDetail(ISBN) : URL/ISBN Get  : Book\n\n\n  bookDetail(isbn) {\n    return axios.get(this.URL + `${isbn}/`).then(response => response && response.data || null);\n  } // bookCreate(BookApiModel) : URL  POST\n\n\n  bookCreate(bookApiModel) {\n    let bookJson = JSON.stringify(bookApiModel);\n    return axios.post(this.URL, bookJson).then(response => response && response.data || null); //reoponse!=null && response.data != null ?response.data : null\n  } // bookModify(BookApiModel) : URL PUT\n\n\n  bookModify(bookApiModel) {\n    let bookJson = JSON.stringify(bookApiModel);\n    return axios.put(this.URL, bookJson).then(response => response && response.data || null);\n  } // bookDelete(ISBN) : URL/ISBN Delete\n\n\n  bookDelete(isbn) {\n    return axios.delete(this.URL + `${isbn}/`).then(response => response && response.data || null);\n  } // search(searchType, keyword): URL/searchType/keyword Get :Book[]\n\n\n  search(searchType, keyword) {\n    return axios.get(this.URL + `${searchType}/${keyword}/`).then(response => response && response.data || null);\n  }\n\n}\n\nexport default BookApi;","map":{"version":3,"sources":["C:/TIL/book_todo/src/api/BookApi.js"],"names":["axios","BookApi","URL","bookList","get","then","response","data","bookDetail","isbn","bookCreate","bookApiModel","bookJson","JSON","stringify","post","bookModify","put","bookDelete","delete","search","searchType","keyword"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AAEA,MAAMC,OAAN,CAAc;AAAA;AAAA,SACZC,GADY,GACN,aADM;AAAA;;AACS;AAErBC,EAAAA,QAAQ,GAAG;AACT,WAAOH,KAAK,CACTI,GADI,CACA,KAAKF,GADL,EAEJG,IAFI,CAEEC,QAAD,IAAeA,QAAQ,IAAIA,QAAQ,CAACC,IAAtB,IAA+B,IAF9C,CAAP;AAGD,GAPW,CASZ;;;AACAC,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,WAAOT,KAAK,CACTI,GADI,CACA,KAAKF,GAAL,GAAY,GAAEO,IAAK,GADnB,EAEJJ,IAFI,CAEEC,QAAD,IAAeA,QAAQ,IAAIA,QAAQ,CAACC,IAAtB,IAA+B,IAF9C,CAAP;AAGD,GAdW,CAgBZ;;;AACAG,EAAAA,UAAU,CAACC,YAAD,EAAe;AACvB,QAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,YAAf,CAAf;AACA,WAAOX,KAAK,CACTe,IADI,CACC,KAAKb,GADN,EACWU,QADX,EAEJP,IAFI,CAEEC,QAAD,IAAeA,QAAQ,IAAIA,QAAQ,CAACC,IAAtB,IAA+B,IAF9C,CAAP,CAFuB,CAKvB;AACD,GAvBW,CAwBZ;;;AACAS,EAAAA,UAAU,CAACL,YAAD,EAAe;AACvB,QAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,YAAf,CAAf;AACA,WAAOX,KAAK,CACTiB,GADI,CACA,KAAKf,GADL,EACUU,QADV,EAEJP,IAFI,CAEEC,QAAD,IAAeA,QAAQ,IAAIA,QAAQ,CAACC,IAAtB,IAA+B,IAF9C,CAAP;AAGD,GA9BW,CAgCZ;;;AACAW,EAAAA,UAAU,CAACT,IAAD,EAAO;AACf,WAAOT,KAAK,CACTmB,MADI,CACG,KAAKjB,GAAL,GAAY,GAAEO,IAAK,GADtB,EAEJJ,IAFI,CAEEC,QAAD,IAAeA,QAAQ,IAAIA,QAAQ,CAACC,IAAtB,IAA+B,IAF9C,CAAP;AAGD,GArCW,CAuCZ;;;AACAa,EAAAA,MAAM,CAACC,UAAD,EAAaC,OAAb,EAAsB;AAC1B,WAAOtB,KAAK,CACTI,GADI,CACA,KAAKF,GAAL,GAAY,GAAEmB,UAAW,IAAGC,OAAQ,GADpC,EAEJjB,IAFI,CAEEC,QAAD,IAAeA,QAAQ,IAAIA,QAAQ,CAACC,IAAtB,IAA+B,IAF9C,CAAP;AAGD;;AA5CW;;AA+Cd,eAAeN,OAAf","sourcesContent":["import axios from \"axios\";\r\n//import request from './cors';\r\n//\r\n\r\nclass BookApi {\r\n  URL = \"/api/books/\"; //http://localhost:9000/api/books\r\n\r\n  bookList() {\r\n    return axios\r\n      .get(this.URL)\r\n      .then((response) => (response && response.data) || null);\r\n  }\r\n\r\n  // bookDetail(ISBN) : URL/ISBN Get  : Book\r\n  bookDetail(isbn) {\r\n    return axios\r\n      .get(this.URL + `${isbn}/`)\r\n      .then((response) => (response && response.data) || null);\r\n  }\r\n\r\n  // bookCreate(BookApiModel) : URL  POST\r\n  bookCreate(bookApiModel) {\r\n    let bookJson = JSON.stringify(bookApiModel);\r\n    return axios\r\n      .post(this.URL, bookJson)\r\n      .then((response) => (response && response.data) || null);\r\n    //reoponse!=null && response.data != null ?response.data : null\r\n  }\r\n  // bookModify(BookApiModel) : URL PUT\r\n  bookModify(bookApiModel) {\r\n    let bookJson = JSON.stringify(bookApiModel);\r\n    return axios\r\n      .put(this.URL, bookJson)\r\n      .then((response) => (response && response.data) || null);\r\n  }\r\n\r\n  // bookDelete(ISBN) : URL/ISBN Delete\r\n  bookDelete(isbn) {\r\n    return axios\r\n      .delete(this.URL + `${isbn}/`)\r\n      .then((response) => (response && response.data) || null);\r\n  }\r\n\r\n  // search(searchType, keyword): URL/searchType/keyword Get :Book[]\r\n  search(searchType, keyword) {\r\n    return axios\r\n      .get(this.URL + `${searchType}/${keyword}/`)\r\n      .then((response) => (response && response.data) || null);\r\n  }\r\n}\r\n\r\nexport default BookApi;\r\n"]},"metadata":{},"sourceType":"module"}