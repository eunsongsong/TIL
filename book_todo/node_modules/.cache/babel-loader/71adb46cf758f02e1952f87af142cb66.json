{"ast":null,"code":"var _jsxFileName = \"C:\\\\TIL\\\\book_todo\\\\src\\\\view\\\\TodoListView.js\";\nimport React, { PureComponent } from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nclass TodoListView extends PureComponent {\n  //\n  render() {\n    //\n    const {\n      todos,\n      onSelectTodo\n    } = this.props;\n    console.log(todos[0]);\n    return /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, \"Contents\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"End Date\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, Array.isArray(todos) && todos.length ? todos.map(todo => {\n      return /*#__PURE__*/React.createElement(Table.Row, {\n        key: todo.todoNum,\n        onClick: () => onSelectTodo(todo.todoNum),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, todo.title), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      }, todo.contents), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }, todo.startDate), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }, todo.endDate));\n    }) : /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"Empty\"))));\n  }\n\n}\n\nexport default TodoListView;","map":{"version":3,"sources":["C:/TIL/book_todo/src/view/TodoListView.js"],"names":["React","PureComponent","Table","moment","TodoListView","render","todos","onSelectTodo","props","console","log","Array","isArray","length","map","todo","todoNum","title","contents","startDate","endDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,YAAN,SAA2BH,aAA3B,CAAyC;AACvC;AACAI,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA0B,KAAKC,KAArC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAAC,CAAD,CAAjB;AAEA,wBACE,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,CADF,eAUE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,KAAK,CAACC,OAAN,CAAcN,KAAd,KAAwBA,KAAK,CAACO,MAA9B,GACCP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;AAClB,0BACE,oBAAC,KAAD,CAAO,GAAP;AACE,QAAA,GAAG,EAAEA,IAAI,CAACC,OADZ;AAEE,QAAA,OAAO,EAAE,MAAMT,YAAY,CAACQ,IAAI,CAACC,OAAN,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,IAAI,CAACE,KAAlB,CAJF,eAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaF,IAAI,CAACG,QAAlB,CALF,eAME,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaH,IAAI,CAACI,SAAlB,CANF,eAOE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaJ,IAAI,CAACK,OAAlB,CAPF,CADF;AAWD,KAZD,CADD,gBAeC,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAhBJ,CAVF,CADF;AAkCD;;AAzCsC;;AA4CzC,eAAehB,YAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Table } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nclass TodoListView extends PureComponent {\n  //\n  render() {\n    //\n    const { todos, onSelectTodo } = this.props;\n    console.log(todos[0]);\n\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Title</Table.HeaderCell>\n            <Table.HeaderCell>Contents</Table.HeaderCell>\n            <Table.HeaderCell>Start Date</Table.HeaderCell>\n            <Table.HeaderCell>End Date</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {Array.isArray(todos) && todos.length ? (\n            todos.map((todo) => {\n              return (\n                <Table.Row\n                  key={todo.todoNum}\n                  onClick={() => onSelectTodo(todo.todoNum)}\n                >\n                  <Table.Cell>{todo.title}</Table.Cell>\n                  <Table.Cell>{todo.contents}</Table.Cell>\n                  <Table.Cell>{todo.startDate}</Table.Cell>\n                  <Table.Cell>{todo.endDate}</Table.Cell>\n                </Table.Row>\n              );\n            })\n          ) : (\n            <Table.Row>\n              <Table.Cell>Empty</Table.Cell>\n            </Table.Row>\n          )}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default TodoListView;\n"]},"metadata":{},"sourceType":"module"}