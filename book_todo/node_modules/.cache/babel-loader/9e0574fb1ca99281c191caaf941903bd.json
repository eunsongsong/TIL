{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\TIL\\\\book_todo\\\\src\\\\container\\\\TodoEditContainer.js\";\n\nimport React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport TodoEditFormView from \"../view/TodoEditFormView\";\nimport generateId from \"../IDGenerator\";\nlet TodoEditContainer = (_dec = inject(\"TodoStore\"), _dec(_class = observer(_class = (_temp = class TodoEditContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSetTodoProp = (name, value) => {\n      //TodoStore의 setTodoProp(name, value) 호출\n      //const {TodoStore} = this.props;\n      this.props.TodoStore.setTodoProp(name, value);\n    };\n\n    this.onAddTodo = () => {\n      //TodoStore의 addTodo(todo) 호출\n      let todo = this.props.TodoStore.todo; // todo = { ...todo, id: generateId(5) };\n\n      this.props.TodoStore.addTodo(todo);\n    };\n\n    this.onRemoveTodo = () => {\n      let todo = this.props.TodoStore.todo;\n      this.props.TodoStore.removeTodo(todo.todoNum);\n    };\n\n    this.onModifyTodo = () => {\n      let todo = this.props.TodoStore.todo;\n      this.props.TodoStore.modifyTodo(todo);\n    };\n  }\n\n  render() {\n    const {\n      todo\n    } = this.props.TodoStore; // const todo = this.props.TodoStore; //todo->TodoStore\n\n    return /*#__PURE__*/React.createElement(TodoEditFormView, {\n      todo: todo,\n      onSetTodoProp: this.onSetTodoProp,\n      onAddTodo: this.onAddTodo,\n      onRemoveTodo: this.onRemoveTodo,\n      onModifyTodo: this.onModifyTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  }\n\n}, _temp)) || _class) || _class);\nexport default TodoEditContainer;","map":{"version":3,"sources":["C:/TIL/book_todo/src/container/TodoEditContainer.js"],"names":["React","Component","observer","inject","TodoEditFormView","generateId","TodoEditContainer","onSetTodoProp","name","value","props","TodoStore","setTodoProp","onAddTodo","todo","addTodo","onRemoveTodo","removeTodo","todoNum","onModifyTodo","modifyTodo","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,UAAP,MAAuB,gBAAvB;IAIMC,iB,WAFLH,MAAM,CAAC,WAAD,C,gBACND,Q,mBADD,MAEMI,iBAFN,SAEgCL,SAFhC,CAE0C;AAAA;AAAA;;AAAA,SACxCM,aADwC,GACxB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B;AACA;AACA,WAAKC,KAAL,CAAWC,SAAX,CAAqBC,WAArB,CAAiCJ,IAAjC,EAAuCC,KAAvC;AACD,KALuC;;AAAA,SAOxCI,SAPwC,GAO5B,MAAM;AAChB;AACA,UAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWC,SAAX,CAAqBG,IAAhC,CAFgB,CAGhB;;AACA,WAAKJ,KAAL,CAAWC,SAAX,CAAqBI,OAArB,CAA6BD,IAA7B;AACD,KAZuC;;AAAA,SAcxCE,YAdwC,GAczB,MAAM;AACnB,UAAIF,IAAI,GAAG,KAAKJ,KAAL,CAAWC,SAAX,CAAqBG,IAAhC;AACA,WAAKJ,KAAL,CAAWC,SAAX,CAAqBM,UAArB,CAAgCH,IAAI,CAACI,OAArC;AACD,KAjBuC;;AAAA,SAmBxCC,YAnBwC,GAmBzB,MAAM;AACnB,UAAIL,IAAI,GAAG,KAAKJ,KAAL,CAAWC,SAAX,CAAqBG,IAAhC;AACA,WAAKJ,KAAL,CAAWC,SAAX,CAAqBS,UAArB,CAAgCN,IAAhC;AACD,KAtBuC;AAAA;;AAwBxCO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAW,KAAKJ,KAAL,CAAWC,SAA5B,CADO,CAEP;;AACA,wBACE,oBAAC,gBAAD;AACE,MAAA,IAAI,EAAEG,IADR;AAEE,MAAA,aAAa,EAAE,KAAKP,aAFtB;AAGE,MAAA,SAAS,EAAE,KAAKM,SAHlB;AAIE,MAAA,YAAY,EAAE,KAAKG,YAJrB;AAKE,MAAA,YAAY,EAAE,KAAKG,YALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AApCuC,C;AAuC1C,eAAeb,iBAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport TodoEditFormView from \"../view/TodoEditFormView\";\r\nimport generateId from \"../IDGenerator\";\r\n\r\n@inject(\"TodoStore\")\r\n@observer\r\nclass TodoEditContainer extends Component {\r\n  onSetTodoProp = (name, value) => {\r\n    //TodoStore의 setTodoProp(name, value) 호출\r\n    //const {TodoStore} = this.props;\r\n    this.props.TodoStore.setTodoProp(name, value);\r\n  };\r\n\r\n  onAddTodo = () => {\r\n    //TodoStore의 addTodo(todo) 호출\r\n    let todo = this.props.TodoStore.todo;\r\n    // todo = { ...todo, id: generateId(5) };\r\n    this.props.TodoStore.addTodo(todo);\r\n  };\r\n\r\n  onRemoveTodo = () => {\r\n    let todo = this.props.TodoStore.todo;\r\n    this.props.TodoStore.removeTodo(todo.todoNum);\r\n  };\r\n\r\n  onModifyTodo = () => {\r\n    let todo = this.props.TodoStore.todo;\r\n    this.props.TodoStore.modifyTodo(todo);\r\n  };\r\n\r\n  render() {\r\n    const { todo } = this.props.TodoStore;\r\n    // const todo = this.props.TodoStore; //todo->TodoStore\r\n    return (\r\n      <TodoEditFormView\r\n        todo={todo}\r\n        onSetTodoProp={this.onSetTodoProp}\r\n        onAddTodo={this.onAddTodo}\r\n        onRemoveTodo={this.onRemoveTodo}\r\n        onModifyTodo={this.onModifyTodo}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoEditContainer;\r\n"]},"metadata":{},"sourceType":"module"}