{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\todo_book\\\\book_todo (2)\\\\src\\\\view\\\\TodoListView.js\";\nimport React, { PureComponent } from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\nclass TodoListView extends PureComponent {\n  //\n  render() {\n    //\n    const {\n      todos,\n      onSelectTodo\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, \"Contents\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \"Start Date\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, \"End Date\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, Array.isArray(todos) && todos.length ? todos.map(todo => {\n      return /*#__PURE__*/React.createElement(Table.Row, {\n        key: todo.todoNum,\n        onClick: () => onSelectTodo(todo.todoNum),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }\n      }, todo.title), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }\n      }, todo.contents), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }\n      }, todo.startDate), /*#__PURE__*/React.createElement(Table.Cell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, todo.endDate));\n    }) : /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \"Empty\"))));\n  }\n\n}\n\nexport default TodoListView;","map":{"version":3,"sources":["C:/Users/user/Desktop/todo_book/book_todo (2)/src/view/TodoListView.js"],"names":["React","PureComponent","Table","TodoListView","render","todos","onSelectTodo","props","Array","isArray","length","map","todo","todoNum","title","contents","startDate","endDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AAEA,MAAMC,YAAN,SAA2BF,aAA3B,CAAyC;AACvC;AACAG,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA0B,KAAKC,KAArC;AAEA,wBACE,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,CADF,eAUE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,KAAwBA,KAAK,CAACK,MAA9B,GACCL,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AAClB,0BACE,oBAAC,KAAD,CAAO,GAAP;AAAW,QAAA,GAAG,EAAEA,IAAI,CAACC,OAArB;AAA8B,QAAA,OAAO,EAAE,MAAMP,YAAY,CAACM,IAAI,CAACC,OAAN,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,IAAI,CAACE,KAAlB,CADF,eAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaF,IAAI,CAACG,QAAlB,CAFF,eAGE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,IAAI,CAACI,SADR,CAHF,eAME,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IAAI,CAACK,OADR,CANF,CADF;AAYD,KAbD,CADD,gBAgBC,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAjBJ,CAVF,CADF;AAmCD;;AAzCsC;;AA4CzC,eAAed,YAAf","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { Table } from \"semantic-ui-react\";\n\nclass TodoListView extends PureComponent {\n  //\n  render() {\n    //\n    const { todos, onSelectTodo } = this.props;\n\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Title</Table.HeaderCell>\n            <Table.HeaderCell>Contents</Table.HeaderCell>\n            <Table.HeaderCell>Start Date</Table.HeaderCell>\n            <Table.HeaderCell>End Date</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {Array.isArray(todos) && todos.length ? (\n            todos.map((todo) => {\n              return (\n                <Table.Row key={todo.todoNum} onClick={() => onSelectTodo(todo.todoNum)}>\n                  <Table.Cell>{todo.title}</Table.Cell>\n                  <Table.Cell>{todo.contents}</Table.Cell>\n                  <Table.Cell>\n                    {todo.startDate}\n                  </Table.Cell>\n                  <Table.Cell>\n                    {todo.endDate}\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })\n          ) : (\n            <Table.Row>\n              <Table.Cell>Empty</Table.Cell>\n            </Table.Row>\n          )}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default TodoListView;\n"]},"metadata":{},"sourceType":"module"}