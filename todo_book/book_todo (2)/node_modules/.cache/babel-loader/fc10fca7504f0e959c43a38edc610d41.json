{"ast":null,"code":"import _initializerDefineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\todo_book\\\\book_todo (2)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"C:\\\\Users\\\\user\\\\Desktop\\\\todo_book\\\\book_todo (2)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"C:\\\\Users\\\\user\\\\Desktop\\\\todo_book\\\\book_todo (2)\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { observable, computed, action } from 'mobx';\nimport BookApi from '../api/BookApi';\nlet BookStore = (_class = (_temp = class BookStore {\n  constructor() {\n    this.bookApi = new BookApi();\n\n    _initializerDefineProperty(this, \"books\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"book\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"errorMessage\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"select\", _descriptor4, this);\n  }\n\n  get _book() {\n    return this.book ? { ...this.book\n    } : {};\n  }\n\n  get _books() {\n    return this.books ? this.books.slice() : [];\n  }\n\n  get getErrorMessage() {\n    return this.errorMessage ? this.errorMessage : \"FAIL.\";\n  }\n\n  async bookList() {\n    let result = await this.bookApi.bookList(); //console.log(result);\n    //result instanceof Array check - {message:\"error\"}인경우 처리\n    //parsing check - pasing form맞추기 위해 result JSON.stringify(result) 변환 후 사용\n    // result -> JSON 객체로 정규화 -> books 객체로 parsing\n\n    if (result instanceof Array) {\n      this.books = JSON.parse(JSON.stringify(result));\n    } else if (result) {\n      this.errorMessage = result(\"message\");\n    }\n  }\n\n  async findByBook(isbn) {\n    this.book = await this.bookApi.bookDetail(isbn);\n  }\n\n  async bookCreate(bookApiModel) {\n    let result = this.bookApi.bookCreate(bookApiModel);\n    if (result == null) this.errorMessage = \"CREATE ERROR!\";\n  }\n\n  async bookDelete(isbn) {\n    let result = this.bookApi.bookDelete(isbn);\n    if (result == null) this.errorMessage = `${isbn} DELETE ERROR!`;\n  }\n\n  async bookUpdate(bookApiModel) {\n    let result = this.bookApi.bookUpdate(bookApiModel);\n    if (result == null) this.errorMessage = `${bookApiModel.isbn} UPDATE ERROR!`;\n  }\n\n  async search(searchType, keyword) {\n    this.books = this.bookApi.search(searchType, keyword);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"books\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"book\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"errorMessage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"_book\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"_book\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"_books\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"_books\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"getErrorMessage\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"getErrorMessage\"), _class.prototype), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"select\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return book => {\n      // this.book = book;\n      this.findByBook(book.isbn);\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"bookList\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"bookList\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"findByBook\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"findByBook\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"bookCreate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"bookCreate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"bookDelete\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"bookDelete\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"bookUpdate\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"bookUpdate\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"search\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"search\"), _class.prototype)), _class);\nexport default new BookStore();","map":{"version":3,"sources":["C:/Users/user/Desktop/todo_book/book_todo (2)/src/store/BookStore.js"],"names":["observable","computed","action","BookApi","BookStore","bookApi","_book","book","_books","books","slice","getErrorMessage","errorMessage","bookList","result","Array","JSON","parse","stringify","findByBook","isbn","bookDetail","bookCreate","bookApiModel","bookDelete","bookUpdate","search","searchType","keyword"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,QAA6C,MAA7C;AACA,OAAOC,OAAP,MAAoB,gBAApB;IAEMC,S,sBAAN,MAAMA,SAAN,CAAgB;AAAA;AAAA,SAEZC,OAFY,GAEJ,IAAIF,OAAJ,EAFI;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAQZ,MAAcG,KAAd,GAAsB;AAClB,WAAO,KAAKC,IAAL,GAAY,EAAE,GAAG,KAAKA;AAAV,KAAZ,GAA+B,EAAtC;AACH;;AAED,MAAcC,MAAd,GAAuB;AACnB,WAAO,KAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,KAAX,EAAb,GAAkC,EAAzC;AACH;;AAED,MAAcC,eAAd,GAA+B;AAC3B,WAAO,KAAKC,YAAL,GAAoB,KAAKA,YAAzB,GAAwC,OAA/C;AACH;;AAOD,QACMC,QADN,GACgB;AACb,QAAIC,MAAM,GAAE,MAAM,KAAKT,OAAL,CAAaQ,QAAb,EAAlB,CADa,CAEb;AACA;AACA;AACA;;AACA,QAAGC,MAAM,YAAYC,KAArB,EAA2B;AACzB,WAAKN,KAAL,GAAaO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,MAAf,CAAX,CAAb;AACD,KAFD,MAEM,IAAGA,MAAH,EAAU;AACX,WAAKF,YAAL,GAAoBE,MAAM,CAAC,SAAD,CAA1B;AACJ;AACH;;AAED,QACMK,UADN,CACiBC,IADjB,EACsB;AAClB,SAAKb,IAAL,GAAW,MAAM,KAAKF,OAAL,CAAagB,UAAb,CAAwBD,IAAxB,CAAjB;AACH;;AAED,QACME,UADN,CACiBC,YADjB,EAC8B;AAC1B,QAAIT,MAAM,GAAG,KAAKT,OAAL,CAAaiB,UAAb,CAAwBC,YAAxB,CAAb;AACA,QAAGT,MAAM,IAAI,IAAb,EAAoB,KAAKF,YAAL,GAAkB,eAAlB;AACvB;;AAED,QACMY,UADN,CACiBJ,IADjB,EACsB;AAClB,QAAIN,MAAM,GAAG,KAAKT,OAAL,CAAamB,UAAb,CAAwBJ,IAAxB,CAAb;AACA,QAAGN,MAAM,IAAI,IAAb,EAAoB,KAAKF,YAAL,GAAmB,GAAEQ,IAAK,gBAA1B;AACvB;;AAED,QACMK,UADN,CACiBF,YADjB,EAC8B;AAC3B,QAAIT,MAAM,GAAG,KAAKT,OAAL,CAAaoB,UAAb,CAAwBF,YAAxB,CAAb;AACC,QAAGT,MAAM,IAAI,IAAb,EAAoB,KAAKF,YAAL,GAAmB,GAAEW,YAAY,CAACH,IAAK,gBAAvC;AACvB;;AAED,QACMM,MADN,CACaC,UADb,EACyBC,OADzB,EACiC;AAC7B,SAAKnB,KAAL,GAAa,KAAKJ,OAAL,CAAaqB,MAAb,CAAoBC,UAApB,EAAgCC,OAAhC,CAAb;AACH;;AAjEW,C,+EAIX5B,U;;;;;WAAmB,E;;wEACnBA,U;;;;;WAAkB,I;;gFAClBA,U;;;;;WAAwB,E;;0DAExBC,Q,yIAIAA,Q,mJAIAA,Q,kKAIAC,M;;;;;WAAiBK,IAAD,IAAU;AACxB;AACA,WAAKY,UAAL,CAAgBZ,IAAI,CAACa,IAArB;AACF,K;;6DAEAlB,M,gJAcAA,M,kJAKAA,M,kJAMAA,M,kJAMAA,M,8IAMAA,M;AAML,eAAe,IAAIE,SAAJ,EAAf","sourcesContent":["import { observable, computed, action } from 'mobx';\r\nimport BookApi from '../api/BookApi';\r\n\r\nclass BookStore {\r\n\r\n    bookApi=new BookApi();\r\n\r\n    @observable books = [];  //BookApi- bookList()\r\n    @observable book = null; //BookApi- bookDetail(ISBN)\r\n    @observable errorMessage=\"\";\r\n    \r\n    @computed get _book() {\r\n        return this.book ? { ...this.book } : {};\r\n    }\r\n\r\n    @computed get _books() {\r\n        return this.books ? this.books.slice() : [];\r\n    }\r\n\r\n    @computed get getErrorMessage(){\r\n        return this.errorMessage ? this.errorMessage : \"FAIL.\";\r\n    }\r\n\r\n    @action select = (book) => {\r\n       // this.book = book;\r\n       this.findByBook(book.isbn);\r\n    }\r\n\r\n    @action\r\n    async bookList(){\r\n       let result= await this.bookApi.bookList();\r\n       //console.log(result);\r\n       //result instanceof Array check - {message:\"error\"}인경우 처리\r\n       //parsing check - pasing form맞추기 위해 result JSON.stringify(result) 변환 후 사용\r\n       // result -> JSON 객체로 정규화 -> books 객체로 parsing\r\n       if(result instanceof Array){\r\n         this.books = JSON.parse(JSON.stringify(result));\r\n       }else if(result){\r\n            this.errorMessage = result(\"message\");\r\n       }\r\n    }\r\n\r\n    @action\r\n    async findByBook(isbn){\r\n        this.book= await this.bookApi.bookDetail(isbn);\r\n    }\r\n\r\n    @action\r\n    async bookCreate(bookApiModel){\r\n        let result = this.bookApi.bookCreate(bookApiModel);\r\n        if(result == null ) this.errorMessage=\"CREATE ERROR!\";\r\n    }\r\n\r\n    @action\r\n    async bookDelete(isbn){\r\n        let result = this.bookApi.bookDelete(isbn);\r\n        if(result == null ) this.errorMessage=`${isbn} DELETE ERROR!`;\r\n    }\r\n\r\n    @action\r\n    async bookUpdate(bookApiModel){\r\n       let result = this.bookApi.bookUpdate(bookApiModel);\r\n        if(result == null ) this.errorMessage=`${bookApiModel.isbn} UPDATE ERROR!`;\r\n    }\r\n\r\n    @action\r\n    async search(searchType, keyword){\r\n        this.books = this.bookApi.search(searchType, keyword);\r\n    }\r\n}\r\n\r\nexport default new BookStore();"]},"metadata":{},"sourceType":"module"}